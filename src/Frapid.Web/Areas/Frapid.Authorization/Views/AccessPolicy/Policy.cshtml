@model Frapid.Authorization.ViewModels.UserEntityAccessPolicy

@{
    ViewBag.Title = "Entity Access Policy";
    Layout = ViewBag.Layout;
}

    <div class="ui attached padded segment">
        <div class="ui huge header">Entity Access Policy</div>
        <div class="ui divider"></div>
        <div class="ui vpad8 form">
            <div class="three fields">
                <div class="field">
                    <label>Select a User</label>
                    <select id="UserDropdown" class="ui search dropdown">
                        <option>Select</option>
                        @foreach (var item in Model.Users)
                        {
                            <option value="@item.UserId">@item.Name</option>
                        }
                    </select>
                </div>
                <div class="field">
                    <label>Select an Office</label>
                    <select id="OfficeDropdown" class="ui search dropdown">
                        <option>Select</option>
                        @foreach (var item in Model.Offices)
                        {
                            <option value="@item.OfficeId">@item.OfficeCode (@item.OfficeName)</option>
                        }
                    </select>
                </div>
                <div class="field">
                    <label>&nbsp;</label>
                    <button data-get-policy-button class="ui positive button">Load</button>
                </div>
            </div>
        </div>

        <table class="ui attached selector table">
            <thead>
            <tr>
                <th>
                    Entity
                </th>
                @foreach (var type in Model.AccessTypes)
                {
                    <th>
                        <input type="checkbox" id="AccessInputCheckbox@(type.AccessTypeId)" data-toggle-target="@type.AccessTypeId"/>
                        <label for="AccessInputCheckbox@(type.AccessTypeId)">@type.AccessTypeName</label>                       
                    </th>
                }
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.Entities)
            {
                <tr data-object-id="@item.ObjectId">
                    <td>
                        @item.Name
                    </td>
                    @foreach (var type in Model.AccessTypes)
                    {
                        <td>
                            <input type="checkbox" data-type="@type.AccessTypeId"/>
                        </td>
                    }
                </tr>
            }
            </tbody>
        </table>
        <div class="vpad8"></div>
        <button data-save-button class="ui positive button">Save</button>
    </div>
<script>
    $("[data-toggle-target]").change(function () {
        var el = $(this);
        var target = el.attr("data-toggle-target");

        var state = el.prop("checked");
        var table = el.closest("table");
        var selector = "[data-type=" + target + "]";

        if (!state) {
            $(selector).removeAttr("checked");
            return;
        };

        table.find(selector).prop("checked", true);
    });

    $(window).keypress(function (event) {
        if (!(event.which === 115 && event.ctrlKey) && !(event.which === 19)) return true;
        save();
        event.preventDefault();
        return false;
    });

    function save() {
        function request(officeId, userId, model) {
            var url = "/dashboard/authorization/entity-access/user-policy/{officeId}/{userId}";

            url = url.replace("{officeId}", officeId);
            url = url.replace("{userId}", userId);

            var data = JSON.stringify(model);

            return window.getAjaxRequest(url, "POST", data);
        };

        var confirmed = window.confirmAction();
        if (!confirmed) {
            return;
        };

        var userId = parseInt($("#UserDropdown").val() || 0);
        var officeId = parseInt($("#OfficeDropdown").val() || 0);

        if (!userId || !officeId) {
            return;
        };

        var model = [];

        $("table tbody tr").each(function() {
            var row = $(this);
            var objectId = row.attr("data-object-id");

            var members = row.find("input[type=checkbox]");
            $.each(members, function() {
                var el = $(this);

                var allowed = el.is(":checked");
                var accessTypeId = el.attr("data-type");

                model.push({
                    EntityName: objectId,
                    AccessTypeId: accessTypeId,
                    AllowAccess: allowed
                });
            });

        });


        var ajax = request(officeId, userId, model);

        ajax.success(function () {
            window.displaySuccess();
        });

        ajax.fail(function (xhr) {
            window.logAjaxErrorMessage(xhr);
        });
    };

    $("[data-save-button]").off("click").on("click", function () {
        save();
    });


    $("[data-get-policy-button]").off("click").on("click", function () {
        function request(officeId, userId) {
            var url = "/dashboard/authorization/entity-access/user-policy/{officeId}/{userId}";
            url = url.replace("{officeId}", officeId);
            url = url.replace("{userId}", userId);

            return window.getAjaxRequest(url);
        };

        var userId = parseInt($("#UserDropdown").val() || 0);
        var officeId = parseInt($("#OfficeDropdown").val() || 0);

        if (!userId || !officeId) {
            return;
        };

        var ajax = request(officeId, userId);

        ajax.success(function (response) {
            $("table input[type=checkbox]").removeAttr("checked");

            $.each(response, function () {
                var selector = "tr[data-object-id=\"{entityName}\"]";
                selector = selector.replace("{entityName}", this.EntityName);

                var row = $(selector);
                selector = "[data-type=\"{accessTypeId}\"]";
                selector = selector.replace("{accessTypeId}", this.AccessTypeId);

                var target = row.find(selector);

                if (this.AllowAccess) {
                    target.prop("checked", true);
                };
            });
        });

    });

</script>